{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Desktop\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439 \\u0422\\u0440\\u0435\\u043F\\u0430\\u0447\\u0451\\u0432 \\u041C\\u0435\\u043D\\u0442\\u043E\\u0440\\\\React\\\\english-words\\\\src\\\\Components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './style-card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = ({\n  setRandomIndex,\n  randomIndex,\n  cards,\n  setCards,\n  setFinish,\n  setMemorized,\n  memorized,\n  setShowMemory,\n  showMemory\n}) => {\n  _s();\n  const [showResult, setShowResult] = React.useState(false);\n  const [stepMix, setStepMix] = React.useState(0);\n  function getRandom(el) {\n    return Math.floor(Math.random() * el.length);\n  }\n  React.useEffect(() => {\n    if (cards.length > 0) {\n      const index = getRandom(cards);\n      setRandomIndex(index);\n    }\n  }, []);\n  function handleShowNextCard(id) {\n    setStepMix(stepMix + 1);\n    setMemorized(memorized => {\n      const updateCards = [...memorized, cards.filter(obj => obj.id === id)].flat();\n      return updateCards;\n    });\n    setCards(cards => {\n      const updateCards = cards.filter(obj => obj.id !== id);\n      if (updateCards.length > 0) {\n        const newIndex = getRandom(updateCards);\n        setRandomIndex(newIndex);\n      } else {\n        setFinish(true);\n      }\n      return updateCards;\n    });\n    if (stepMix > 2) {\n      const newIndex = getRandom(memorized);\n      setRandomIndex(newIndex);\n      setShowMemory(true);\n      setStepMix(0);\n    } else {\n      setShowMemory(false);\n    }\n    ;\n  }\n  function handleShowResult(id) {\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      if (!id) {\n        const newIndex = getRandom(cards);\n        setRandomIndex(newIndex);\n      } else {\n        setCards(cards => {\n          const updateCards = [...cards, memorized.filter(obj => obj.id === id)].flat();\n          return updateCards;\n        });\n        setMemorized(memorizedCards => {\n          const updateCards = memorizedCards.filter(obj => obj.id !== id);\n          return updateCards;\n        });\n        setShowMemory(false);\n        const newIndex = getRandom(memorized);\n        setRandomIndex(newIndex);\n      }\n    }, 5000);\n  }\n  const card = cards[randomIndex];\n  const memoriedCard = memorized[randomIndex];\n  console.log(randomIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id,\n    class: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"card-name\",\n      children: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.name : card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      class: `card-translation ${showResult && 'show-answer'}`,\n      children: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.translation : card.translation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowNextCard(showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id),\n        class: \"card-button-yes\",\n        children: \"I know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowResult(showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : ''),\n        class: \"card-button-no\",\n        children: \"Don't know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"QrFarW5fQ8APyepRB5Kdy2iCjK8=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","setRandomIndex","randomIndex","cards","setCards","setFinish","setMemorized","memorized","setShowMemory","showMemory","_s","showResult","setShowResult","useState","stepMix","setStepMix","getRandom","el","Math","floor","random","length","useEffect","index","handleShowNextCard","id","updateCards","filter","obj","flat","newIndex","handleShowResult","setTimeout","memorizedCards","card","memoriedCard","console","log","class","children","name","fileName","_jsxFileName","lineNumber","columnNumber","translation","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ALEX/Desktop/Дмитрий Трепачёв Ментор/React/english-words/src/Components/Card/Card.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './style-card.css';\r\n\r\nexport const Card = ({ setRandomIndex, randomIndex, cards, setCards, setFinish , setMemorized, memorized, setShowMemory, showMemory}) => {\r\n    const [showResult, setShowResult] = React.useState(false);\r\n    const [stepMix, setStepMix] = React.useState(0);\r\n\r\n    function getRandom(el) {\r\n        return Math.floor(Math.random() * (el.length));\r\n    }\r\n \r\n    React.useEffect(() => {\r\n        if (cards.length > 0) {\r\n            const index = getRandom(cards);\r\n            setRandomIndex(index)\r\n        }\r\n    }, []);\r\n\r\n    function handleShowNextCard(id) { \r\n        setStepMix(stepMix + 1);\r\n\r\n        setMemorized(memorized => {\r\n            const updateCards = [...memorized, cards.filter(obj => obj.id === id)].flat()\r\n            return updateCards;\r\n        });\r\n\r\n        setCards(cards => {\r\n            const updateCards = cards.filter(obj => obj.id !== id);\r\n\r\n            if (updateCards.length > 0) {\r\n                const newIndex = getRandom(updateCards);\r\n                setRandomIndex(newIndex);\r\n            } else {\r\n                setFinish(true);\r\n            }\r\n            return updateCards;\r\n        });\r\n\r\n        if (stepMix > 2) {\r\n            const newIndex = getRandom(memorized);\r\n            setRandomIndex(newIndex);\r\n            \r\n            setShowMemory(true);\r\n            setStepMix(0);\r\n        } else {\r\n            setShowMemory(false);\r\n        }; \r\n    }\r\n\r\n    function handleShowResult(id) {\r\n        setShowResult(true);\r\n\r\n        setTimeout(() => {\r\n            setShowResult(false);\r\n\r\n                if (!id) {\r\n                    const newIndex = getRandom(cards);\r\n                    setRandomIndex(newIndex)\r\n                } else {\r\n                    \r\n                    setCards(cards => {\r\n                        const updateCards = [...cards, memorized.filter(obj => obj.id === id)].flat()\r\n                        return updateCards;\r\n                    });\r\n\r\n                    setMemorized(memorizedCards => {\r\n                        const updateCards = memorizedCards.filter(obj => obj.id !== id);\r\n                        return updateCards;\r\n                    });\r\n                    setShowMemory(false);\r\n\r\n                    const newIndex = getRandom(memorized);\r\n                    setRandomIndex(newIndex)\r\n                }\r\n            }, 5000);\r\n    }\r\n    \r\n    const card = cards[randomIndex];\r\n    const memoriedCard = memorized[randomIndex];\r\n\r\n    console.log(randomIndex);\r\n\r\n    return (\r\n        <div key= {showMemory? memoriedCard?.id : card.id} id={showMemory? memoriedCard?.id : card.id}  class=\"card\">\r\n            <h1 class=\"card-name\">{showMemory? memoriedCard?.name : card.name}</h1>\r\n            <h1 class={`card-translation ${showResult && 'show-answer'}`}>{showMemory? memoriedCard?.translation : card.translation}</h1>\r\n            <div class=\"card-buttons\">\r\n                <button\r\n                    onClick={() => handleShowNextCard(showMemory? memoriedCard?.id : card.id)}\r\n                    class=\"card-button-yes\"\r\n                >I know\r\n                </button>\r\n                <button\r\n                    onClick={() => handleShowResult(showMemory ? memoriedCard?.id : '')}\r\n                    class=\"card-button-no\"\r\n                >Don't know\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}