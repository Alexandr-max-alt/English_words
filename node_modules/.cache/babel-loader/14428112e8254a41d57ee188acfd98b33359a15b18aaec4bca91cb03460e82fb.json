{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Desktop\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439 \\u0422\\u0440\\u0435\\u043F\\u0430\\u0447\\u0451\\u0432 \\u041C\\u0435\\u043D\\u0442\\u043E\\u0440\\\\React\\\\english-words\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './index.css';\nimport { Card } from './Components/Card/Card';\nimport { Table } from './Components/Table/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allCards, setAllCards] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [memorized, setMemorized] = React.useState([]);\n  const [listMemorization, setListMemorization] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [finishGame, setFinish] = React.useState(false);\n  const [showMemory, setShowMemory] = React.useState(false);\n  const [showTable, setShowTable] = React.useState(false);\n  const [randomIndex, setRandomIndex] = React.useState(0);\n  const [stepMix, setStepMix] = React.useState(0);\n  React.useEffect(() => {\n    fetch('/data.json').then(res => res.json()).then(json => {\n      setCards(json);\n      setAllCards(json);\n      localStorage.setItem('cards', {\n        \"all cards\": JSON.stringify(json)\n      });\n    }).catch(err => console.warn('err')).finally(() => setIsLoading(false));\n  }, []);\n  React.useEffect(() => {\n    if (!showMemory) {\n      const index = getRandom(cards);\n      setRandomIndex(index);\n    }\n  }, [cards]);\n  function getRandom(el) {\n    let num = Math.floor(Math.random() * (el.length - 1));\n    return num < 0 ? 0 : num;\n  }\n  function clearStats() {\n    window.location.reload();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      class: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"header__title\",\n        children: \"English words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"content\",\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: finishGame ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"KONEC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Card, {\n          allCards: allCards,\n          listMemorization: listMemorization,\n          setListMemorization: setListMemorization,\n          setStepMix: setStepMix,\n          stepMix: stepMix,\n          getRandom: getRandom,\n          setRandomIndex: setRandomIndex,\n          randomIndex: randomIndex,\n          showMemory: showMemory,\n          setShowMemory: setShowMemory,\n          setMemorized: setMemorized,\n          memorized: memorized,\n          setFinish: setFinish,\n          setCards: setCards,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearStats(),\n        class: \"button-clear\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowTable(true),\n        class: \"button-table\",\n        children: \"Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        listMemorization: listMemorization,\n        memorized: memorized,\n        allCards: allCards,\n        setShowTable: setShowTable,\n        showTable: showTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TNhwuarBqs1bnHb0c67KOj4xi+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Card","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","allCards","setAllCards","useState","cards","setCards","memorized","setMemorized","listMemorization","setListMemorization","isLoading","setIsLoading","finishGame","setFinish","showMemory","setShowMemory","showTable","setShowTable","randomIndex","setRandomIndex","stepMix","setStepMix","useEffect","fetch","then","res","json","localStorage","setItem","JSON","stringify","catch","err","console","warn","finally","index","getRandom","el","num","Math","floor","random","length","clearStats","window","location","reload","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ALEX/Desktop/Дмитрий Трепачёв Ментор/React/english-words/src/App.js"],"sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Card } from './Components/Card/Card';\nimport { Table } from './Components/Table/Table';\n\n\nfunction App() {\n  const [allCards, setAllCards] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [memorized, setMemorized] = React.useState([]);\n  const [listMemorization,setListMemorization] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [finishGame, setFinish] = React.useState(false);\n  const [showMemory, setShowMemory] = React.useState(false);\n  const [showTable, setShowTable] = React.useState(false);\n  const [randomIndex, setRandomIndex] = React.useState(0);\n  const [stepMix, setStepMix] = React.useState(0);\n\n  React.useEffect(() => {\n    fetch('/data.json')\n      .then(res => res.json())\n      .then(json => {\n        setCards(json)\n        setAllCards(json)\n        localStorage.setItem('cards',{\"all cards\" : JSON.stringify(json)})\n      })\n      .catch(err => console.warn('err'))\n      .finally(()=>setIsLoading(false))\n  }, []);\n\n  React.useEffect(() => {\n    if (!showMemory) {\n        const index = getRandom(cards);\n        setRandomIndex(index)\n    }\n  }, [cards]);\n\n  function getRandom(el) {\n    let num = Math.floor(Math.random() * (el.length - 1));\n    return num < 0 ? 0 : num;\n  }\n  \n \n  function clearStats() {\n    window.location.reload();\n  }\n\n  return (\n    <div class='App'>\n      <header class='header'>\n        <h1 class='header__title'>English words</h1>\n      </header>\n      <div class='content'>\n        {isLoading ?\n          (<h1>Loading...</h1>)\n          : (<>\n            {finishGame ?\n              <h2>KONEC</h2>\n              :\n              <Card\n                allCards={allCards}\n                listMemorization={listMemorization}\n                setListMemorization={setListMemorization}\n                setStepMix={setStepMix}\n                stepMix={stepMix}\n                getRandom={getRandom}\n                setRandomIndex={setRandomIndex}\n                randomIndex={randomIndex}\n                showMemory={showMemory}\n                setShowMemory={setShowMemory}\n                setMemorized={setMemorized}\n                memorized={memorized}\n                setFinish={setFinish}\n                setCards={setCards}\n                cards={cards}\n            />\n            }\n            </>\n          ) \n        }  \n        <button onClick={() => clearStats()} class=\"button-clear\">Clear</button>\n        <button onClick={() => setShowTable(true)} class=\"button-table\">Table</button>\n        <Table\n          listMemorization={listMemorization}\n          memorized={memorized}\n          allCards={allCards}\n          setShowTable={setShowTable}\n          showTable={showTable}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}