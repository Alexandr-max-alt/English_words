{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Desktop\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439 \\u0422\\u0440\\u0435\\u043F\\u0430\\u0447\\u0451\\u0432 \\u041C\\u0435\\u043D\\u0442\\u043E\\u0440\\\\React\\\\english-words\\\\src\\\\Components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './style-card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = ({\n  saveToLocalMemorized,\n  allCards,\n  setListMemorization,\n  stepMix,\n  setStepMix,\n  getRandom,\n  setRandomIndex,\n  randomIndex,\n  cards,\n  setCards,\n  setFinish,\n  setMemorized,\n  memorized,\n  setShowMemory,\n  showMemory\n}) => {\n  _s();\n  const [showResult, setShowResult] = React.useState(false);\n  function checkSteps(Cards) {\n    if (stepMix > 3) {\n      setShowMemory(true);\n      setRandomIndex(getRandom(memorized));\n      setStepMix(0);\n    } else {\n      setRandomIndex(getRandom(Cards));\n      setShowMemory(false);\n    }\n    ;\n  }\n  function handleShowNextCard(id) {\n    setStepMix(++stepMix);\n    setMemorized(memorized => {\n      const updateCards = [...memorized, cards.filter(obj => obj.id === id)].flat();\n      saveToLocal(updateCards);\n      return updateCards;\n    });\n    setCards(cards => {\n      const updateCards = cards.filter(obj => obj.id !== id);\n      updateCards.length > 0 ? checkSteps(updateCards) : setFinish(true);\n      saveToLocal(updateCards);\n      return updateCards;\n    });\n  }\n  function handleShowResult(id) {\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      setListMemorization(list => {\n        const updateList = [...new Set([...list, allCards.filter(obj => obj.id === id)].flat())];\n        return updateList;\n      });\n      setMemorized(memorizedCards => {\n        const updateCards = memorizedCards.filter(obj => obj.id !== id);\n        return updateCards;\n      });\n      setShowMemory(false);\n      const newIndex = getRandom(cards);\n      setRandomIndex(newIndex);\n    }, 5000);\n  }\n  const card = cards[randomIndex];\n  const memoriedCard = memorized[randomIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id,\n    class: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"card-name\",\n      children: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.name : card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      class: `card-translation ${showResult && 'show-answer'}`,\n      children: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.translation : card.translation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowNextCard(showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id),\n        class: \"card-button-yes\",\n        children: \"I know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowResult(showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id),\n        class: \"card-button-no\",\n        children: \"Don't know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"rqmcWIqQ8wlBMnMBaWApEOoJQgg=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","saveToLocalMemorized","allCards","setListMemorization","stepMix","setStepMix","getRandom","setRandomIndex","randomIndex","cards","setCards","setFinish","setMemorized","memorized","setShowMemory","showMemory","_s","showResult","setShowResult","useState","checkSteps","Cards","handleShowNextCard","id","updateCards","filter","obj","flat","saveToLocal","length","handleShowResult","setTimeout","list","updateList","Set","memorizedCards","newIndex","card","memoriedCard","class","children","name","fileName","_jsxFileName","lineNumber","columnNumber","translation","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ALEX/Desktop/Дмитрий Трепачёв Ментор/React/english-words/src/Components/Card/Card.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './style-card.css';\r\n\r\nexport const Card = ({ saveToLocalMemorized, allCards, setListMemorization, stepMix, setStepMix, getRandom, setRandomIndex, randomIndex, cards, setCards, setFinish , setMemorized, memorized, setShowMemory, showMemory}) => {\r\n    const [showResult, setShowResult] = React.useState(false);\r\n\r\n    function checkSteps(Cards) {\r\n        if (stepMix > 3) {\r\n            setShowMemory(true);\r\n            setRandomIndex(getRandom(memorized));\r\n\r\n            setStepMix(0);\r\n        } else {\r\n            setRandomIndex(getRandom(Cards));\r\n            setShowMemory(false);\r\n        };\r\n    }\r\n\r\n    function handleShowNextCard(id) { \r\n        setStepMix(++stepMix);\r\n\r\n        setMemorized(memorized => {\r\n            const updateCards = [...memorized, cards.filter(obj => obj.id === id)].flat()\r\n\r\n            saveToLocal(updateCards)\r\n            return updateCards;\r\n        });\r\n\r\n        setCards(cards => {\r\n            const updateCards = cards.filter(obj => obj.id !== id);\r\n            updateCards.length > 0 ? checkSteps(updateCards) : setFinish(true);\r\n\r\n            saveToLocal(updateCards)\r\n            return updateCards;\r\n        });\r\n    }\r\n\r\n    function handleShowResult(id) {\r\n        setShowResult(true);\r\n\r\n        setTimeout(() => {\r\n            setShowResult(false);\r\n\r\n                    setListMemorization(list => {\r\n                        const updateList = [...new Set([...list, allCards.filter(obj => obj.id === id)].flat())]\r\n                        return updateList\r\n                    });\r\n\r\n                    setMemorized(memorizedCards => {\r\n                        const updateCards = memorizedCards.filter(obj => obj.id !== id);\r\n                        return updateCards;\r\n                    });\r\n                    setShowMemory(false);\r\n\r\n                    const newIndex = getRandom(cards);\r\n                    setRandomIndex(newIndex);\r\n        }, 5000);\r\n    }\r\n\r\n    const card = cards[randomIndex];\r\n    const memoriedCard = memorized[randomIndex];\r\n\r\n    return (\r\n        <div key= {showMemory? memoriedCard?.id : card.id} id={showMemory? memoriedCard?.id : card.id}  class=\"card\">\r\n            <h1 class=\"card-name\">{showMemory? memoriedCard?.name : card.name}</h1>\r\n            <h1 class={`card-translation ${showResult && 'show-answer'}`}>{showMemory? memoriedCard?.translation : card.translation}</h1>\r\n            <div class=\"card-buttons\">\r\n                <button\r\n                    onClick={() => handleShowNextCard(showMemory? memoriedCard?.id : card.id)}\r\n                    class=\"card-button-yes\"\r\n                >I know\r\n                </button>\r\n                <button\r\n                    onClick={() => handleShowResult(showMemory ? memoriedCard?.id : card.id)}\r\n                    class=\"card-button-no\"\r\n                >Don't know\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}