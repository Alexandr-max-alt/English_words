{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Desktop\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439 \\u0422\\u0440\\u0435\\u043F\\u0430\\u0447\\u0451\\u0432 \\u041C\\u0435\\u043D\\u0442\\u043E\\u0440\\\\React\\\\english-words\\\\src\\\\Components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './style-card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Card = ({\n  stepMix,\n  setStepMix,\n  getRandom,\n  setRandomIndex,\n  randomIndex,\n  cards,\n  setCards,\n  setFinish,\n  setMemorized,\n  memorized,\n  setShowMemory,\n  showMemory\n}) => {\n  _s();\n  const [showResult, setShowResult] = React.useState(false);\n  function checkSteps() {}\n  function handleShowNextCard(id) {\n    setStepMix(++stepMix);\n    setMemorized(memorized => {\n      const updateCards = [...memorized, cards.filter(obj => obj.id === id)].flat();\n      return updateCards;\n    });\n    setCards(cards => {\n      const updateCards = cards.filter(obj => obj.id !== id);\n      if (updateCards.length > 0) {\n        if (stepMix > 3) {\n          setShowMemory(true);\n          setRandomIndex(getRandom(memorized));\n          setStepMix(0);\n        } else {\n          setRandomIndex(getRandom(updateCards));\n          setShowMemory(false);\n        }\n      } else {\n        setFinish(true);\n      }\n      return updateCards;\n    });\n  }\n  function handleShowResult(id) {\n    setShowResult(true);\n    setTimeout(() => {\n      setShowResult(false);\n      if (!id) {\n        const newIndex = getRandom(cards);\n        setRandomIndex(newIndex);\n      } else {\n        setCards(cards => {\n          const updateCards = [...cards, memorized.filter(obj => obj.id === id)].flat();\n          return updateCards;\n        });\n        setMemorized(memorizedCards => {\n          const updateCards = memorizedCards.filter(obj => obj.id !== id);\n          return updateCards;\n        });\n        setShowMemory(false);\n        const newIndex = getRandom(memorized);\n        setRandomIndex(newIndex);\n      }\n    }, 5000);\n  }\n  const card = cards[randomIndex];\n  const memoriedCard = memorized[randomIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id,\n    class: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"card-name\",\n      children: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.name : card.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      class: `card-translation ${showResult && 'show-answer'}`,\n      children: showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.translation : card.translation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowNextCard(showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id),\n        class: \"card-button-yes\",\n        children: \"I know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleShowResult(showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : ''),\n        class: \"card-button-no\",\n        children: \"Don't know\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, showMemory ? memoriedCard === null || memoriedCard === void 0 ? void 0 : memoriedCard.id : card.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Card, \"rqmcWIqQ8wlBMnMBaWApEOoJQgg=\");\n_c = Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","stepMix","setStepMix","getRandom","setRandomIndex","randomIndex","cards","setCards","setFinish","setMemorized","memorized","setShowMemory","showMemory","_s","showResult","setShowResult","useState","checkSteps","handleShowNextCard","id","updateCards","filter","obj","flat","length","handleShowResult","setTimeout","newIndex","memorizedCards","card","memoriedCard","class","children","name","fileName","_jsxFileName","lineNumber","columnNumber","translation","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ALEX/Desktop/Дмитрий Трепачёв Ментор/React/english-words/src/Components/Card/Card.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './style-card.css';\r\n\r\nexport const Card = ({ stepMix, setStepMix, getRandom, setRandomIndex, randomIndex, cards, setCards, setFinish , setMemorized, memorized, setShowMemory, showMemory}) => {\r\n    const [showResult, setShowResult] = React.useState(false);\r\n\r\n\r\n    function checkSteps() {\r\n        \r\n    }\r\n    function handleShowNextCard(id) { \r\n        setStepMix(++stepMix);\r\n\r\n        setMemorized(memorized => {\r\n            const updateCards = [...memorized, cards.filter(obj => obj.id === id)].flat()\r\n            return updateCards;\r\n        });\r\n\r\n        setCards(cards => {\r\n            const updateCards = cards.filter(obj => obj.id !== id);\r\n\r\n            if (updateCards.length > 0) {\r\n                if (stepMix > 3) {\r\n                    setShowMemory(true);\r\n                    setRandomIndex(getRandom(memorized));\r\n\r\n                    setStepMix(0);\r\n                } else {\r\n                    setRandomIndex(getRandom(updateCards));\r\n                    setShowMemory(false);\r\n                }\r\n            } else {\r\n                setFinish(true);\r\n            }\r\n\r\n            return updateCards;\r\n        });\r\n    }\r\n\r\n    function handleShowResult(id) {\r\n        setShowResult(true);\r\n\r\n        setTimeout(() => {\r\n            setShowResult(false);\r\n\r\n                if (!id) {\r\n                    const newIndex = getRandom(cards);\r\n                    setRandomIndex(newIndex)\r\n                } else {\r\n                    \r\n                    setCards(cards => {\r\n                        const updateCards = [...cards, memorized.filter(obj => obj.id === id)].flat()\r\n                        return updateCards;\r\n                    });\r\n\r\n                    setMemorized(memorizedCards => {\r\n                        const updateCards = memorizedCards.filter(obj => obj.id !== id);\r\n                        return updateCards;\r\n                    });\r\n                    setShowMemory(false);\r\n\r\n                    const newIndex = getRandom(memorized);\r\n                    setRandomIndex(newIndex)\r\n                }\r\n            }, 5000);\r\n    }\r\n    \r\n    const card = cards[randomIndex];\r\n    const memoriedCard = memorized[randomIndex];\r\n\r\n    return (\r\n        <div key= {showMemory? memoriedCard?.id : card.id} id={showMemory? memoriedCard?.id : card.id}  class=\"card\">\r\n            <h1 class=\"card-name\">{showMemory? memoriedCard?.name : card.name}</h1>\r\n            <h1 class={`card-translation ${showResult && 'show-answer'}`}>{showMemory? memoriedCard?.translation : card.translation}</h1>\r\n            <div class=\"card-buttons\">\r\n                <button\r\n                    onClick={() => handleShowNextCard(showMemory? memoriedCard?.id : card.id)}\r\n                    class=\"card-button-yes\"\r\n                >I know\r\n                </button>\r\n                <button\r\n                    onClick={() => handleShowResult(showMemory ? memoriedCard?.id : '')}\r\n                    class=\"card-button-no\"\r\n                >Don't know\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}