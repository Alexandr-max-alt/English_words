{"ast":null,"code":"import React from'react';import'./index.css';import{Card}from'./Components/Card/Card';import{Table}from'./Components/Table/Table';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[allCards,setAllCards]=React.useState([]);const[cards,setCards]=React.useState([]);const[memorized,setMemorized]=React.useState([]);const[listMemorization,setListMemorization]=React.useState([]);const[isLoading,setIsLoading]=React.useState(true);const[finishGame,setFinish]=React.useState(false);const[showMemory,setShowMemory]=React.useState(false);const[showTable,setShowTable]=React.useState(false);const[randomIndex,setRandomIndex]=React.useState(0);const[stepMix,setStepMix]=React.useState(0);// localStorage.clear()\nReact.useEffect(()=>{if(localStorage.getItem('cards')){const renderCards=JSON.parse(localStorage.getItem('cards'));setCards(renderCards.cards);setAllCards(renderCards.cards);setMemorized(renderCards.memorized);setListMemorization(renderCards.cardsForMemory);setIsLoading(false);checkLocal();}else{fetch('https://65573e73bd4bcef8b6124ef7.mockapi.io/Cards').then(res=>res.json()).then(json=>{setCards(json);setAllCards(json);localStorage.setItem('cards',JSON.stringify({'cards':json,'memorized':[],'cardsForMemory':[]}));}).catch(err=>console.warn('err')).finally(()=>setIsLoading(false));}},[]);React.useEffect(()=>{if(!showMemory){const index=getRandom(cards);setRandomIndex(index);}},[cards]);function saveToLocal(result,param){const updateCards=JSON.parse(localStorage.getItem('cards'));updateCards[\"\".concat(param)]=result;checkLocal();localStorage.setItem('cards',JSON.stringify(updateCards));}function getRandom(el){let num=Math.floor(Math.random()*(el.length-1));return num<0?0:num;}function checkLocal(){const cards=JSON.parse(localStorage.getItem('cards'));cards.cards.length===0&&setFinish(true);}function clearStats(){localStorage.clear();window.location.reload();}return/*#__PURE__*/_jsxs(\"div\",{class:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{class:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{class:\"header__title\",children:\"English words\"})}),/*#__PURE__*/_jsxs(\"div\",{class:\"content\",children:[isLoading?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(_Fragment,{children:finishGame?/*#__PURE__*/_jsx(\"h2\",{children:\"KONEC\"}):/*#__PURE__*/_jsx(Card,{saveToLocal:saveToLocal,allCards:allCards,listMemorization:listMemorization,setListMemorization:setListMemorization,setStepMix:setStepMix,stepMix:stepMix,getRandom:getRandom,setRandomIndex:setRandomIndex,randomIndex:randomIndex,showMemory:showMemory,setShowMemory:setShowMemory,setMemorized:setMemorized,memorized:memorized,setFinish:setFinish,setCards:setCards,cards:cards})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>clearStats(),class:\"button-clear\",children:\"Clear\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowTable(true),class:\"button-table\",children:\"Table\"}),/*#__PURE__*/_jsx(Table,{listMemorization:listMemorization,memorized:memorized,allCards:allCards,setShowTable:setShowTable,showTable:showTable})]})]});}export default App;","map":{"version":3,"names":["React","Card","Table","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","allCards","setAllCards","useState","cards","setCards","memorized","setMemorized","listMemorization","setListMemorization","isLoading","setIsLoading","finishGame","setFinish","showMemory","setShowMemory","showTable","setShowTable","randomIndex","setRandomIndex","stepMix","setStepMix","useEffect","localStorage","getItem","renderCards","JSON","parse","cardsForMemory","checkLocal","fetch","then","res","json","setItem","stringify","catch","err","console","warn","finally","index","getRandom","saveToLocal","result","param","updateCards","concat","el","num","Math","floor","random","length","clearStats","clear","window","location","reload","class","children","onClick"],"sources":["C:/Users/ALEX/Desktop/test/src/App.js"],"sourcesContent":["import React from 'react';\nimport './index.css';\nimport { Card } from './Components/Card/Card';\nimport { Table } from './Components/Table/Table';\n\nfunction App() {\n  const [allCards, setAllCards] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [memorized, setMemorized] = React.useState([]);\n  const [listMemorization,setListMemorization] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [finishGame, setFinish] = React.useState(false);\n  const [showMemory, setShowMemory] = React.useState(false);\n  const [showTable, setShowTable] = React.useState(false);\n  const [randomIndex, setRandomIndex] = React.useState(0);\n  const [stepMix, setStepMix] = React.useState(0);\n\n  // localStorage.clear()\n  React.useEffect(() => {\n    if (localStorage.getItem('cards')) {\n      const renderCards = JSON.parse(localStorage.getItem('cards'));\n\n      setCards(renderCards.cards)\n      setAllCards(renderCards.cards)\n      setMemorized(renderCards.memorized)\n      setListMemorization(renderCards.cardsForMemory)\n      setIsLoading(false)\n      checkLocal()\n    } else {\n      fetch('https://65573e73bd4bcef8b6124ef7.mockapi.io/Cards')\n      .then(res => res.json())\n      .then(json => {\n        setCards(json)\n        setAllCards(json)\n\n        localStorage.setItem('cards', JSON.stringify({'cards': json, 'memorized':[], 'cardsForMemory':[]}))\n      })\n      .catch(err => console.warn('err'))\n      .finally(()=>setIsLoading(false))\n    }\n  }, []);\n\n  \n  React.useEffect(() => {\n    if (!showMemory) {\n        const index = getRandom(cards);\n        setRandomIndex(index)\n    }\n  }, [cards]);\n\n\n  function saveToLocal(result, param) {\n    const updateCards = JSON.parse(localStorage.getItem('cards'));\n    updateCards[`${param}`] = result;\n\n    checkLocal()\n    localStorage.setItem('cards', JSON.stringify(updateCards));\n  }\n\n  function getRandom(el) {\n    let num = Math.floor(Math.random() * (el.length - 1));\n    return num < 0 ? 0 : num;\n  }\n\n  function checkLocal() {\n    const cards = JSON.parse(localStorage.getItem('cards'));\n    cards.cards.length === 0 && setFinish(true)\n  }\n \n  function clearStats() {\n    localStorage.clear()\n    window.location.reload();\n  }\n\n  return (\n    <div class='App'>\n      <header class='header'>\n        <h1 class='header__title'>English words</h1>\n      </header>\n      <div class='content'>\n        {isLoading ?\n          (<h1>Loading...</h1>)\n          : (<>\n            {finishGame ?\n              <h2>KONEC</h2>\n              :\n              <Card\n                saveToLocal={saveToLocal}\n                allCards={allCards}\n                listMemorization={listMemorization}\n                setListMemorization={setListMemorization}\n                setStepMix={setStepMix}\n                stepMix={stepMix}\n                getRandom={getRandom}\n                setRandomIndex={setRandomIndex}\n                randomIndex={randomIndex}\n                showMemory={showMemory}\n                setShowMemory={setShowMemory}\n                setMemorized={setMemorized}\n                memorized={memorized}\n                setFinish={setFinish}\n                setCards={setCards}\n                cards={cards}\n            />\n            }\n            </>\n          ) \n        }  \n        <button onClick={() => clearStats()} class=\"button-clear\">Clear</button>\n        <button onClick={() => setShowTable(true)} class=\"button-table\">Table</button>\n        <Table\n          listMemorization={listMemorization}\n          memorized={memorized}\n          allCards={allCards}\n          setShowTable={setShowTable}\n          showTable={showTable}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}